syntax = "proto3";
package cosmwasmlifecycle;
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmwasmlifecycle/execution_type.proto";

option go_package = "github.com/emidev98/cosmwasm-lifecycle/x/cosmwasmlifecycle/types";

// Msg defines the Msg service.
service Msg {
  rpc EnableContractBlockExecution(MsgEnableContractBlockExecution) returns (MsgEnableContractBlockExecutionResponse);
  rpc DisableContractBlockExecution(MsgDisableContractBlockExecution) returns (MsgDisableContractBlockExecutionResponse);
}

message MsgEnableContractBlockExecution {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  string contract_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  ExecutionType execution = 2;
}
message MsgEnableContractBlockExecutionResponse {}

message MsgDisableContractBlockExecution {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  string contract_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  ExecutionType execution = 2;
}
message MsgDisableContractBlockExecutionResponse {}
