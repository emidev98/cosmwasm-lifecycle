syntax = "proto3";
package emidev98.lifecycle_hooks;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "emidev98/lifecycle_hooks/execution_type.proto";

option go_package = "github.com/emidev98/lifecycle-hooks/x/lifecycle-hooks/types";

// Contract defines the main object used in the module to store it's state.
message Contract {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  // Contract's execution type
  ExecutionType execution_type = 1;
  // Execution frequency 
  int64 execution_frequency = 2;
  // Latest block execution
  int64 latest_block_execution = 3;
  // Amount of strikes that the contract has at the moment.
  int64 strikes = 4;
  // Collateral deposited to the contract.
  cosmos.base.v1beta1.Coin deposit = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

// GenesisContract is the genesis state of the module, including the relation 
// between the contract address and the contract state itself.
message GenesisContract {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  string contract_address = 1;
  Contract contract = 2[(gogoproto.nullable) = false];
}
